{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/senujidesilva/Desktop/Frontend/app/minebot/page.tsx"],"sourcesContent":["'use client';\nimport React, { useState, useRef, useContext, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { ThemeContext } from './layout';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport Image from 'next/image';\n\ninterface Message {\n  id: number;\n  role: 'user' | 'assistant';\n  content: string;\n}\n\nconst LoadingSpinner = () => (\n  <div className=\"animate-spin rounded-full border-2 border-gray-300 border-t-orange-500 h-full w-full\"/>\n);\n\nconst StatusDot = ({ isAvailable, isDarkMode }: { isAvailable: boolean; isDarkMode: boolean }) => (\n  <div \n    className={`absolute bottom-[-2px] right-[-2px] w-3 h-3 rounded-full border-2 ${\n      isDarkMode ? 'border-gray-900' : 'border-white'\n    } ${\n      isAvailable ? 'bg-green-500' : 'bg-red-500'\n    } z-10 shadow-sm`}\n  />\n);\n\nexport default function MineBot() {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [messages, setMessages] = useState<Message[]>([\n    { \n      id: 1, \n      role: 'assistant',\n      content: \"Hello! I'm MineBot, your intelligent mining assistant powered by AI. I can answer any questions about mining, sustainability, or other topics. How can I help you today?\"\n    }\n  ]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(true);\n  const [isApiAvailable, setIsApiAvailable] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Check API availability\n  const checkApiAvailability = async () => {\n    try {\n      const response = await fetch('/api/health-check', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      setIsApiAvailable(response.ok);\n    } catch (error) {\n      setIsApiAvailable(false);\n    }\n  };\n\n  // Initial API check and periodic polling\n  useEffect(() => {\n    checkApiAvailability();\n    const interval = setInterval(checkApiAvailability, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  // Auto-scroll to bottom of messages - removed smooth behavior\n  React.useEffect(() => {\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  // AI-powered response generation\n  const generateAIResponse = async (userMessage: string) => {\n    setIsTyping(true);\n    setIsError(false);\n    \n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          messages: messages.map(({ role, content }) => ({ role, content })),\n          input: userMessage,\n        }),\n      });\n\n      // Check content type\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Server returned non-JSON response. Please try again later.');\n      }\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error('API Error:', data);\n        throw new Error(data.error || 'Failed to get response from AI');\n      }\n\n      if (!data.message || !data.message.content) {\n        throw new Error('Invalid response format from API');\n      }\n\n      setTimeout(() => {\n        setMessages(prev => [...prev, { \n          id: Date.now(), \n          role: data.message.role,\n          content: data.message.content\n        }]);\n        setIsTyping(false);\n      }, 1000);\n      \n    } catch (error) {\n      console.error(\"Error generating AI response:\", error);\n      setIsError(true);\n      setMessages(prev => [...prev, { \n        id: Date.now(), \n        role: 'assistant',\n        content: `I apologize, but I encountered an issue: ${error instanceof Error ? error.message : 'Unknown error occurred'}. Please try again.`\n      }]);\n      setIsTyping(false);\n    }\n  };\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n    const userMessage = inputValue;\n    setMessages(prev => [...prev, { \n      id: Date.now(), \n      role: 'user',\n      content: userMessage \n    }]);\n    setInputValue(\"\");\n    generateAIResponse(userMessage);\n  };\n\n  return (\n    <>\n      {/* Chatbot Header */}\n      <div className=\"pt-20 pb-6\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex flex-col items-center justify-center\">\n            <motion.div \n              className=\"text-center w-full\"\n              initial={{ y: 20 }}\n              animate={{ y: 0 }}\n              transition={{ duration: 0.8 }}\n            >\n              <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-4\">MINEBOT AI</h1>\n              <p className={`text-lg md:text-xl max-w-3xl mx-auto ${isDarkMode ? 'opacity-80' : 'opacity-90'}`}>\n                Your AI-powered intelligent assistant for mining inquiries and beyond. Ask me anything about sustainable mining operations, environmental practices, or any other topic you&apos;re curious about.\n              </p>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n      \n      {/* ChatBot Interface */}\n      <div className=\"pb-16\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div \n            className={`max-w-4xl mx-auto rounded-lg overflow-hidden shadow-xl ${\n              isDarkMode ? 'bg-gray-900' : 'bg-white'\n            }`}\n            initial={{ y: 20 }}\n            animate={{ y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            {/* Messages Display */}\n            <div className={`h-96 md:h-[500px] overflow-y-auto p-6 ${\n              isDarkMode ? 'bg-gray-900' : 'bg-white'\n            }`}>\n              {messages.map(message => (\n                <div \n                  key={message.id} \n                  className={`mb-4 flex items-start ${message.role === 'assistant' ? 'justify-start' : 'justify-end'}`}\n                >\n                  {message.role === 'assistant' && (\n                    <div className=\"flex-shrink-0 mr-3 relative\">\n                      <div className=\"w-8 h-8 rounded-full overflow-hidden bg-orange-500 flex items-center justify-center relative\">\n                        {imageLoading && <LoadingSpinner />}\n                        <Image\n                          src=\"/favicon.ico\"\n                          alt=\"MineBot Avatar\"\n                          width={32}\n                          height={32}\n                          className={`object-fill ${imageLoading ? 'opacity-0' : 'opacity-100'}`}\n                          onLoadingComplete={() => setImageLoading(false)}\n                          onError={() => setImageLoading(false)}\n                          priority\n                        />\n                      </div>\n                      <StatusDot isAvailable={isApiAvailable} isDarkMode={isDarkMode} />\n                    </div>\n                  )}\n                  \n                  <div className={`max-w-[75%]`}>\n                    <div \n                      className={`rounded-lg px-4 py-3 ${\n                        message.role === 'assistant'\n                          ? isDarkMode \n                            ? 'bg-gray-800 text-white prose prose-invert max-w-none' \n                            : 'bg-gray-100 text-gray-900 prose max-w-none'\n                          : 'bg-orange-500 text-white'\n                      } ${isError && message.role === 'assistant' ? 'border-red-500 border' : ''}`}\n                    >\n                      {message.role === 'assistant' ? (\n                        <div className=\"break-words\">\n                          <ReactMarkdown \n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                              p: ({children}) => <p className=\"mb-1 last:mb-0\">{children}</p>,\n                              ul: ({children}) => <ul className=\"mb-1 last:mb-0 pl-4\">{children}</ul>,\n                              ol: ({children}) => <ol className=\"mb-1 last:mb-0 pl-4\">{children}</ol>,\n                              li: ({children}) => <li className=\"mb-0.5\">{children}</li>,\n                              code: ({node, children}) => (\n                                <code \n                                  className={node?.position?.start.line === node?.position?.end.line \n                                    ? \"px-1 py-0.5 rounded bg-gray-700 text-gray-100\"\n                                    : \"block p-2 rounded bg-gray-700 text-gray-100 overflow-x-auto\"\n                                  }\n                                >\n                                  {children}\n                                </code>\n                              )\n                            }}\n                          >\n                            {message.content}\n                          </ReactMarkdown>\n                        </div>\n                      ) : (\n                        message.content\n                      )}\n                    </div>\n                  </div>\n\n                  {message.role === 'user' && (\n                    <div className=\"flex-shrink-0 ml-3\">\n                      <div className=\"w-8 h-8 rounded-full overflow-hidden bg-gray-600 flex items-center justify-center\">\n                        <svg \n                          className=\"w-5 h-5 text-white\" \n                          fill=\"currentColor\" \n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path \n                            fillRule=\"evenodd\" \n                            d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" \n                            clipRule=\"evenodd\" \n                          />\n                        </svg>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n              {isTyping && (\n                <div className=\"mb-4 flex items-start\">\n                  <div className=\"flex-shrink-0 mr-3\">\n                    <div className=\"w-8 h-8 rounded-full overflow-hidden bg-orange-500 flex items-center justify-center relative\">\n                      {imageLoading && <LoadingSpinner />}\n                      <Image\n                        src=\"/favicon.ico\"\n                        alt=\"MineBot Avatar\"\n                        width={32}\n                        height={32}\n                        className={`object-fill ${imageLoading ? 'opacity-0' : 'opacity-100'}`}\n                        onLoadingComplete={() => setImageLoading(false)}\n                        onError={() => setImageLoading(false)}\n                        priority\n                      />\n                      <StatusDot isAvailable={isApiAvailable} isDarkMode={isDarkMode} />\n                    </div>\n                  </div>\n                  <div className={`rounded-lg px-4 py-3 ${\n                    isDarkMode ? 'bg-gray-800' : 'bg-gray-100'\n                  }`}>\n                    <div className=\"flex space-x-1\">\n                      <div className={`w-2 h-2 rounded-full ${isDarkMode ? 'bg-gray-500' : 'bg-gray-400'} animate-bounce`} style={{ animationDelay: '0ms' }}></div>\n                      <div className={`w-2 h-2 rounded-full ${isDarkMode ? 'bg-gray-500' : 'bg-gray-400'} animate-bounce`} style={{ animationDelay: '300ms' }}></div>\n                      <div className={`w-2 h-2 rounded-full ${isDarkMode ? 'bg-gray-500' : 'bg-gray-400'} animate-bounce`} style={{ animationDelay: '600ms' }}></div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n            \n            {/* Input Form */}\n            <form \n              onSubmit={handleSendMessage}\n              className={`p-4 border-t ${\n                isDarkMode ? 'border-gray-800' : 'border-gray-200'\n              }`}\n            >\n              <div className=\"flex\">\n                <input\n                  type=\"text\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  className={`flex-grow px-4 py-2 rounded-l-md focus:outline-none ${\n                    isDarkMode \n                      ? 'bg-gray-800 text-white border-gray-700' \n                      : 'bg-gray-100 text-gray-900 border-gray-200'\n                  } border`}\n                  placeholder=\"Ask me anything...\"\n                  disabled={isTyping}\n                />\n                <button\n                  type=\"submit\"\n                  className={`bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-r-md transition-colors ${\n                    isTyping ? 'opacity-50 cursor-not-allowed' : ''\n                  }`}\n                  disabled={isTyping}\n                >\n                  Send\n                </button>\n              </div>\n            </form>\n          </motion.div>\n          \n          {/* Suggested Questions */}\n          <motion.div \n            className=\"max-w-4xl mx-auto mt-8\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            <h3 className=\"text-xl font-bold mb-4\">Try asking:</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {[\n                \"How do I apply for a mining license?\",\n                \"What is the GSMB and what are its functions?\",\n                \"How can I report illegal mining activities?\",\n                \"How does the royalty calculation system work?\",\n                \"What are the steps in the license application process?\",\n                \"How can I track my license application status?\",\n                \"What security measures does CeylonMine implement?\",\n                \"How does CeylonMine protect the environment?\"\n              ].map((question, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    setInputValue(question);\n                    const input = document.querySelector('input');\n                    if (input) input.focus();\n                  }}\n                  className={`text-left p-3 rounded-md transition-colors ${\n                    isDarkMode \n                      ? 'bg-gray-900 hover:bg-gray-800' \n                      : 'bg-white hover:bg-gray-100'\n                  } shadow`}\n                  disabled={isTyping}\n                >\n                  {question}\n                </button>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}